---
name: build
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  style-checker:
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 Job triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 Job runs on ${{ runner.os }} by ${{runner.name}}"
      - run: echo "🔎 Branch - ${{ github.ref }}; "
          "repo - ${{ github.repository }}."
      - run: echo "🖥️ The workspace, ${{ github.workspace }}, "
          "is now ready to test your code on the runner."

      - name: Install cpplint, pylint
        run: sudo pip install cpplint pylint

      - name: Install cppcheck
        run: sudo apt-get install cppcheck

      - uses: actions/checkout@v3

      - name: Add permission to style checker
        run: chmod +x ./tools/check_style.sh

      - name: Run cpplint, pylint
        run: ./tools/check_style.sh

  build:
    needs: style-checker
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]
    steps:
      - run: echo "🎉 Job triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 Job runs on ${{ runner.os }} by ${{runner.name}}"
      - run: echo "🔎 Branch - ${{ github.ref }}; "
          "repo - ${{ github.repository }}."
      - run: echo "🖥️ The workspace, ${{ github.workspace }}, "
          "is now ready to test your code on the runner."

      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install python modules
        run: pip install -r requirements.txt

      #- name: Get Python site-packages path
      #  id: get_site_packages
      #  run: echo "site_packages_path=$(python -c 'import site; print(site.getsitepackages()[0])')" >> $GITHUB_OUTPUT

      #- name: Verify site package path
      #  run: echo ${{ steps.get_site_packages.outputs.site_packages_path }}

      - name: Configure CMake
        run: |
          cmake -B ${{github.workspace}}/build \
          -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} \
          -DCMAKE_INSTALL_PREFIX=${{ steps.get_site_packages.outputs.site_packages_path }}

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: Install
        run: cmake --install ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      #- name: Add __init__.py
      #  run: |
      #    echo "from .pydisort import *" > ${{ steps.get_site_packages.outputs.site_packages_path }}/pydisort/__init__.py

      - name: Run tests for C++ and Pybind
        run: cd ${{github.workspace}}/build/bin && python3 test_isotropic_scattering.py
