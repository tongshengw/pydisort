name: Packaging Tests
on:
  push:
    # Run on tags that look like releases
    tags:
      - v*

jobs:
  macos-wheel:
    name: Build macOS wheels
    runs-on: macos-11
    outputs:
      job-status: ${{ job.status }}

    strategy:
      matrix:
        py: ["38", "39", "310", "311"]
        deployment_target: ["11.0"]
      fail-fast: true
    env:
      MACOSX_DEPLOYMENT_TARGET: ${{ matrix.deployment_target }}

    steps:
      - uses: actions/checkout@v3
        name: Checkout the repository
        with:
          ref: ${{ github.event.inputs.incoming_ref }}

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.16.2
        env:
          # uncomment this to enable passing environment variables
          #CIBW_ENVIRONMENT: "CMAKE_ARGS=-DPYTHON_VERSION=3.${{ matrix.py }}"
          # cross compilation with arm64 does not work
          CIBW_ARCHS_MACOS: x86_64
          CIBW_BUILD: cp${{ matrix.py }}-*

      - name: Archive the built wheels
        uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl
          name: wheels

  linux-wheel:
    name: Build linux wheels
    runs-on: ubuntu-latest
    outputs:
      job-status: ${{ job.status }}

    strategy:
      matrix:
        py: ["38", "39", "310", "311"]
        arch: ["x86_64"]
        libc: ["many"]
      fail-fast: true

    steps:
      - uses: actions/checkout@v3
        name: Checkout the repository
        with:
          ref: ${{ github.event.inputs.incoming_ref }}

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.16.2
        env:
          # uncomment this to enable passing environment variables
          #CIBW_ENVIRONMENT: "CMAKE_ARGS=-DPYTHON_VERSION=3.${{ matrix.py }}"
          CIBW_BUILD: cp${{ matrix.py }}-${{ matrix.libc }}linux*
          CIBW_ARCHS: ${{ matrix.arch }}

      - name: Archive the built wheels
        uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl
          name: wheels

  publish-files-to-pypi:
    name: Publish distribution files to PyPI
    runs-on: ubuntu-22.04

    outputs:
      job-status: ${{ job.status }}

    needs:
      - "macos-wheel"
      - "linux-wheel"

    steps:
      - name: Download pre-built wheels
        uses: actions/download-artifact@v3
        with:
          path: dist/
          name: wheels
      - name: pypi-publish
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYDISORT_TOKEN }}
