name: Bump Version and Tag

on:
  pull_request:
    types: [closed]
    branches: [main]

env:
  PYTHON_VERSION: "3.11"

jobs:
  bump-version:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Bump version and push tag
        id: bump_version
        uses: jasonamyers/github-bumpversion-action@v1.0.5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
          tags: true

      - name: Generate Release Notes
        uses: octokit/request-action@v2.x
        id: get_release_notes
        with:
          route: POST /repos/${{ github.repository }}/releases/generate-notes
          tag_name: v${{ steps.bump_version.outputs.new_ver }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub release
        id: create_release
        uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.bump_version.outputs.new_ver }}
          release_name: Release v${{ steps.bump_version.outputs.new_ver }}
          draft: false
          prerelease: false
          body: ${{ fromJson(steps.get_release_notes.outputs.data).body }}

      - name: Post comment on PR with release notes
        uses: actions/github-script@v7
        with:
          script: |
            const notes = `${{ fromJson(steps.get_release_notes.outputs.data).body }}`;
            github.rest.issues.createComment({
              issue_number: context.payload.pull_request.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ðŸŽ‰ Released v${{ steps.bump_version.outputs.new_ver }}!\n\n${notes}`
            })
